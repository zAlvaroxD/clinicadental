package Visual;

import Entidades.Medico;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class MedicoVisual extends javax.swing.JFrame {
    
    String cedula;
    GregorianCalendar fechanacimiento=new GregorianCalendar(1995,11,07);
    public static ArrayList<Medico> listMedico=new ArrayList<>();
    
    
    public MedicoVisual() {
        initComponents();
        Medico med1=new Medico("podologia", "1758123077", "nelson", "hernandez", fechanacimiento, "masculino", "A+");
        listMedico.add(med1);
        Medico med2=new Medico("urologia", "1751206531", "sebas", "castro", fechanacimiento, "masculino", "O+");
        listMedico.add(med2);
        BotonTransparente();
        jTable1.addMouseListener(new MouseAdapter() {
            DefaultTableModel model=new DefaultTableModel();

            @Override
            public void mouseClicked(MouseEvent e){
                int i= jTable1.getSelectedRow();
                try{
                cedula=(jTable1.getValueAt(i, 0).toString());
                }catch(NullPointerException ex){
                     JOptionPane.showMessageDialog(rootPane, "La tabla esta vacia");
                }
            }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelimagen = new javax.swing.JLabel();
        jLabelnombre = new javax.swing.JLabel();
        jLabelCedula = new javax.swing.JLabel();
        jLabelApellido = new javax.swing.JLabel();
        FechaNacimiento = new javax.swing.JLabel();
        jLabelEspecialidad = new javax.swing.JLabel();
        jTextFieldCedula = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldApellido = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonGuardar = new javax.swing.JButton();
        jButtonlimpiar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonTerminarEdicion = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonRegresar = new javax.swing.JButton();
        jComboBoxEspecialidad = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxSexo = new javax.swing.JComboBox<>();
        jComboBoxTipSangre = new javax.swing.JComboBox<>();
        jButtonSalir = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        jLabelimagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/doctor (2).png"))); // NOI18N
        jLabelimagen.setToolTipText("REGISTRO MEDICO");
        getContentPane().add(jLabelimagen);
        jLabelimagen.setBounds(60, 10, 210, 270);

        jLabelnombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelnombre.setText("Nombre: ");
        getContentPane().add(jLabelnombre);
        jLabelnombre.setBounds(350, 47, 130, 30);

        jLabelCedula.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelCedula.setText("Cedula:");
        getContentPane().add(jLabelCedula);
        jLabelCedula.setBounds(350, 7, 130, 30);

        jLabelApellido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelApellido.setText("Apellido:");
        getContentPane().add(jLabelApellido);
        jLabelApellido.setBounds(350, 87, 130, 30);

        FechaNacimiento.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        FechaNacimiento.setText("Fecha Nacimiento:");
        getContentPane().add(FechaNacimiento);
        FechaNacimiento.setBounds(350, 130, 130, 30);

        jLabelEspecialidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelEspecialidad.setText("Especialidad:");
        getContentPane().add(jLabelEspecialidad);
        jLabelEspecialidad.setBounds(350, 247, 130, 30);
        getContentPane().add(jTextFieldCedula);
        jTextFieldCedula.setBounds(490, 10, 180, 30);

        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldNombre);
        jTextFieldNombre.setBounds(490, 50, 180, 30);
        getContentPane().add(jTextFieldApellido);
        jTextFieldApellido.setBounds(490, 90, 180, 30);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre y Apellido", "Edad", "Especialidad", "Sexo", "Tipo De Sangre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 360, 810, 90);

        jButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar.png"))); // NOI18N
        jButtonGuardar.setToolTipText("Guardar");
        jButtonGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonGuardar);
        jButtonGuardar.setBounds(70, 300, 50, 50);

        jButtonlimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpiar.png"))); // NOI18N
        jButtonlimpiar.setToolTipText("Limpiar");
        jButtonlimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonlimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonlimpiar);
        jButtonlimpiar.setBounds(170, 300, 50, 50);

        jButtonEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        jButtonEditar.setToolTipText("Editar");
        jButtonEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEditar);
        jButtonEditar.setBounds(370, 300, 50, 50);

        jButtonTerminarEdicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/terminarEdicion.png"))); // NOI18N
        jButtonTerminarEdicion.setToolTipText("Terminar Edicion");
        jButtonTerminarEdicion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonTerminarEdicion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTerminarEdicionActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonTerminarEdicion);
        jButtonTerminarEdicion.setBounds(470, 300, 50, 50);

        jButtonEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/eliminarPaciente.png"))); // NOI18N
        jButtonEliminar.setToolTipText("Eliminar Paciente");
        jButtonEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonEliminar);
        jButtonEliminar.setBounds(270, 300, 50, 50);

        jButtonRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/regresar.png"))); // NOI18N
        jButtonRegresar.setToolTipText("Regesar");
        jButtonRegresar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonRegresar);
        jButtonRegresar.setBounds(570, 300, 50, 50);

        jComboBoxEspecialidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alergologia (alergias)", "Anestesiologia (anestesia quirurgica)", "Angiologia y cirugia vascular", "Analisis clinicos", "Anatomia patologica", "Bioquimica clinica", "Cardiologia (corazon)", "Cirugia cardiovascular", "Cirugia general y del aparato digestivo", "Cirugia oral y maxilofacial", "Cirugia ortopedica y traumatologia", "Cirugia pediatrica", "Cirugia plastica, estetica y reparadora", "Cirugia toracica", "Dermatologia medico-quirurgica y venereologia", "Endocrinologia (sistema endocrino)", "Estomatologia", "Farmacologia clinica", "Gastroenterologia (tracto digestivo)", "Geriatria (adultos mayores)", "Genetica medica", "Ginecologia y obstetricia o tocologia", "Hematologia y hemoterapia (sistema circulatorio)", "Hidrologia medica (hidroterapias)", "Infectologia (infecciones)", "Inmunologia", "Medicina aeroespacial (aviacion, el submarinismo y el espacio)", "Medicina del deporte (deportistas)", "Medicina del trabajo (medicina laboral)", "Medicina de urgencias (atencion primaria)", "Medicina familiar y comunitaria (medicina social)", "Medicina fisica y rehabilitacion (fisioterapia)", "Medicina intensiva (soporte vital)", "Medicina interna (salud integral)", "Medicina legal y forense (derecho medico)", "Medicina preventiva y salud publica (prevencion de enfermedades)", "Medicina nuclear", "Microbiologia y parasitologia", "Nefrologia (riñones)", "Neumologia (pulmones)", "Neurologia (cerebro)", "Nutriologia (nutricion)", "Neurocirugia", "Neurofisiologia clinica", "Odontologia (salud bucal)", "Oftalmologia (ojos)", "Oncologia medica (cancer)", "Oncologia radioterapica (cancer)", "Otorrinolaringologia (oidos, nariz y garganta)", "Pediatria (niños)", "Proctologia (colon, recto y ano)", "Psiquiatria (salud mental)", "Rehabilitacion (fisiatria)", "Reumatologia (articulaciones, huesos y musculos)", "Radiodiagnostico o radiologia", "Traumatologia (traumas, lesiones)", "Toxicologia (toxicidad de los compuestos)", "Urologia (aparato urinario)", "Urologia" }));
        getContentPane().add(jComboBoxEspecialidad);
        jComboBoxEspecialidad.setBounds(490, 250, 140, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Sexo:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(350, 170, 130, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Tipo de sangre:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(350, 210, 130, 30);

        jComboBoxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Masculino", "Femenino" }));
        getContentPane().add(jComboBoxSexo);
        jComboBoxSexo.setBounds(490, 170, 140, 30);

        jComboBoxTipSangre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        getContentPane().add(jComboBoxTipSangre);
        jComboBoxTipSangre.setBounds(490, 210, 140, 30);

        jButtonSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/salir.png"))); // NOI18N
        jButtonSalir.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSalir);
        jButtonSalir.setBounds(730, 10, 70, 70);
        getContentPane().add(jDateChooser1);
        jDateChooser1.setBounds(490, 130, 180, 30);

        jLabelFondo.setBackground(new java.awt.Color(255, 255, 255));
        jLabelFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/internalframe.png"))); // NOI18N
        jLabelFondo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabelFondo);
        jLabelFondo.setBounds(0, 0, 810, 450);

        setSize(new java.awt.Dimension(810, 450));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed
        limpiar();
        jTextFieldCedula.setText(listMedico.get(jTable1.getSelectedRow()).getCedula());
        jTextFieldNombre.setText(listMedico.get(jTable1.getSelectedRow()).getNombre());
        jTextFieldApellido.setText(listMedico.get(jTable1.getSelectedRow()).getApellido());
        jDateChooser1.setCalendar(listMedico.get(jTable1.getSelectedRow()).getFechanacimiento());
        jComboBoxEspecialidad.setToolTipText(listMedico.get(jTable1.getSelectedRow()).getEspecialidad());
        jComboBoxSexo.setToolTipText(listMedico.get(jTable1.getSelectedRow()).getSexo());
        jComboBoxTipSangre.setToolTipText(listMedico.get(jTable1.getSelectedRow()).getGrupo_sanguineo());
        
    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegresarActionPerformed
        PrincipalJFrame principal=new PrincipalJFrame();
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonRegresarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        System.out.println("Medico antes de guardar:");
        for(int i=0;i<listMedico.size();i++){
            System.out.println(""+listMedico.get(i).toString());
        }
        if(!"".equals(jTextFieldCedula.getText())&&!"".equals(jTextFieldNombre.getText())&&!"".equals(jTextFieldApellido.getText())&&jDateChooser1.getCalendar()!=null){
            if( buscar_cedula(jTextFieldCedula.getText())!=-1){
                JOptionPane.showMessageDialog(null,"El medico ya existe intente de nuevo");
            }
            else{
                
                Medico medico=new Medico();
                if(medico.validadorDeCedula(jTextFieldCedula.getText())){
                medico.setSexo((String) jComboBoxSexo.getSelectedItem());
                medico.setCedula(jTextFieldCedula.getText());
                medico.setNombre(jTextFieldNombre.getText());
                medico.setApellido(jTextFieldApellido.getText());
                medico.setFechanacimiento((GregorianCalendar) jDateChooser1.getCalendar());
                medico.setEspecialidad((String) jComboBoxEspecialidad.getSelectedItem());
                medico.setGrupo_sanguineo((String) jComboBoxTipSangre.getSelectedItem());
                listMedico.add(medico);
                JOptionPane.showMessageDialog(null,"El medico se guardo con exito ");
                mostrar();
                limpiar();
                }else{
                    JOptionPane.showMessageDialog(null, "Cedula invalida");
                }
            }
        }else{
            JOptionPane.showMessageDialog(null,"Debe llenar todos los campos");
        }
        System.out.println("\nMedico despues de guardar:");
        for(int i=0;i<listMedico.size();i++){
            System.out.println(""+listMedico.get(i).toString());
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        for (int i = 0; i < listMedico.size(); i++) {
            if( cedula.equals(listMedico.get(i).getCedula())){
                listMedico.remove(i);
            }
           mostrar();
            
        }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonlimpiarActionPerformed
        limpiar();
    }//GEN-LAST:event_jButtonlimpiarActionPerformed

    private void jButtonTerminarEdicionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTerminarEdicionActionPerformed
        for (int i = 0; i <listMedico.size(); i++) {
            if(jTextFieldCedula.getText().equals(listMedico.get(i).getCedula())){
                listMedico.get(i).setCedula(jTextFieldCedula.getText());
                listMedico.get(i).setApellido(jTextFieldApellido.getText());
                listMedico.get(i).setFechanacimiento((GregorianCalendar) jDateChooser1.getCalendar());
                listMedico.get(i).setNombre(jTextFieldNombre.getText());
                listMedico.get(i).setEspecialidad((String) jComboBoxEspecialidad.getSelectedItem());
                listMedico.get(i).setSexo((String) jComboBoxSexo.getSelectedItem());
                listMedico.get(i).setGrupo_sanguineo((String) jComboBoxTipSangre.getSelectedItem());
            }
            
        }
        mostrar();
        limpiar();
        
    }//GEN-LAST:event_jButtonTerminarEdicionActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        int dialog=JOptionPane.YES_NO_OPTION;
        int result=JOptionPane.showConfirmDialog(null,"Desea salir del programa?","Salir",dialog);
        if(result==0){
            System.exit(0);
        }
    }//GEN-LAST:event_jButtonSalirActionPerformed
     
                  /* METODOS ADICIONALES*/
    
    public void mostrar(){
                      
            String matrix[][]=new String[listMedico.size()][7];
            for (int i = 0; i < listMedico.size(); i++) {
                
                matrix[i][0]=listMedico.get(i).getCedula();
                matrix[i][1]=listMedico.get(i).getNombre()+" "+listMedico.get(i).getApellido();
                matrix[i][2]=Integer.toString(listMedico.get(i).edad());
                matrix[i][3]=listMedico.get(i).getEspecialidad();
                matrix[i][4]=listMedico.get(i).getSexo();
                matrix[i][5]=listMedico.get(i).getGrupo_sanguineo();
                
            }
             jTable1.setModel(new javax.swing.table.DefaultTableModel(
            matrix,
            new String [] {
                "Cedula", "Nombre y Apellido", "Edad", "Especialidad", "Sexo","Tipo De Sangre"
            }
        ));
             
        }
    private void BotonTransparente(){
            jButtonGuardar.setOpaque(false);
            jButtonGuardar.setContentAreaFilled(false);
            jButtonGuardar.setBorderPainted(false);
            jButtonEditar.setOpaque(false);
            jButtonEditar.setContentAreaFilled(false);
            jButtonEditar.setBorderPainted(false);
            jButtonTerminarEdicion.setOpaque(false);
            jButtonTerminarEdicion.setContentAreaFilled(false);
            jButtonTerminarEdicion.setBorderPainted(false);
            jButtonlimpiar.setOpaque(false);
            jButtonlimpiar.setContentAreaFilled(false);
            jButtonlimpiar.setBorderPainted(false);
            jButtonEliminar.setOpaque(false);
            jButtonEliminar.setContentAreaFilled(false);
            jButtonEliminar.setBorderPainted(false);
            jButtonRegresar.setOpaque(false);
            jButtonRegresar.setContentAreaFilled(false);
            jButtonRegresar.setBorderPainted(false);
            jButtonSalir.setOpaque(false);
            jButtonSalir.setContentAreaFilled(false);
            jButtonSalir.setBorderPainted(false);
        }
    public void limpiar(){
        jTextFieldCedula.setText("");
        jTextFieldNombre.setText("");
        jTextFieldApellido.setText("");
        jComboBoxEspecialidad.setToolTipText("");
        jComboBoxSexo.setToolTipText("");
        jComboBoxTipSangre.setToolTipText("");
        jDateChooser1.setCalendar(null);
                       
    }
    public static int buscar_cedula(String cedula){
        String ced="";
        for(int i=0;i<listMedico.size();i++){
            ced=listMedico.get(i).getCedula();
            if(ced.compareToIgnoreCase(cedula)==0){
                return i;
            }
        }
        return -1;
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MedicoVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MedicoVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MedicoVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MedicoVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MedicoVisual().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel FechaNacimiento;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonRegresar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JButton jButtonTerminarEdicion;
    private javax.swing.JButton jButtonlimpiar;
    private javax.swing.JComboBox<String> jComboBoxEspecialidad;
    private javax.swing.JComboBox<String> jComboBoxSexo;
    private javax.swing.JComboBox<String> jComboBoxTipSangre;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelApellido;
    private javax.swing.JLabel jLabelCedula;
    private javax.swing.JLabel jLabelEspecialidad;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelimagen;
    private javax.swing.JLabel jLabelnombre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldCedula;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables

    
}
